{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JaybudhaDEV\\\\reactPro\\\\projects\\\\coding-challenge-frontend\\\\src\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FormControl from './FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  const [allUsers, setAllUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [user, setUser] = useState({});\n\n  const getAllUsers = async () => {\n    try {\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      setAllUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\"https://jsonplaceholder.typicode.com/posts\", {\n        \"title\": title,\n        \"body\": post,\n        \"userId\": user.id\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const titleValidation = input => {\n    if (input !== null) {\n      return true;\n    }\n  };\n\n  const postValidation = input => {\n    if (input !== null) {\n      return true;\n    }\n  };\n\n  const userValidation = input => {\n    if (input !== null) {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"display-5\",\n      children: \"Make Post!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      label: \"Title\",\n      validationFunction: titleValidation,\n      ErrorMessage: \"Enter a valid title\",\n      callbackFunction: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      label: \"Post\",\n      validationFunction: postValidation,\n      ErrorMessage: \"Enter a valid post\",\n      callbackFunction: setPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"user-select\",\n      className: \"form-label\",\n      children: \"Select A User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"user-select\",\n      className: \"form-select\",\n      onClick: e => {\n        userValidation(user);\n      },\n      onChange: e => {\n        setUser(e.target.value);\n      },\n      value: user,\n      children: allUsers.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user,\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      onClick: e => {\n        handleSubmit(e);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"SOSzpD1FjzgYQ5V0u/teFEpUyU8=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/JaybudhaDEV/reactPro/projects/coding-challenge-frontend/src/components/PostForm.js"],"names":["React","useState","useEffect","axios","FormControl","PostForm","allUsers","setAllUsers","title","setTitle","post","setPost","user","setUser","getAllUsers","response","get","data","error","console","log","handleSubmit","e","preventDefault","id","titleValidation","input","postValidation","userValidation","target","value","map","name"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FormControl from './FormControl';\r\n\r\nconst PostForm = () => {\r\n\r\n    const [allUsers,setAllUsers] = useState([]);\r\n    const [title,setTitle] = useState(\"\");\r\n    const [post,setPost] = useState(\"\");\r\n    const [user,setUser] = useState({});\r\n\r\n\r\n    const getAllUsers = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n            setAllUsers(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(\"https://jsonplaceholder.typicode.com/posts\",{\r\n                \"title\":title,\r\n                \"body\":post,\r\n                \"userId\":user.id\r\n            });\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const titleValidation = (input) =>{\r\n        if(input!== null)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const postValidation = (input) =>{\r\n        if(input!== null)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const userValidation = (input) => {\r\n        if(input !== null)\r\n        {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllUsers();\r\n    },[]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n    <h2 className='display-5'>Make Post!</h2>\r\n    <FormControl\r\n    label = \"Title\"\r\n    validationFunction={titleValidation}\r\n    ErrorMessage = \"Enter a valid title\"\r\n    callbackFunction={setTitle}\r\n     />\r\n    <FormControl\r\n    label = \"Post\"\r\n    validationFunction={postValidation}\r\n    ErrorMessage = \"Enter a valid post\"\r\n    callbackFunction={setPost}\r\n    />\r\n    <label htmlFor=\"user-select\" className='form-label'>Select A User</label>\r\n    <select \r\n    id = 'user-select'\r\n    className='form-select'\r\n    onClick={(e) => {\r\n        userValidation(user)\r\n    }}\r\n    onChange={(e) => {\r\n        setUser(e.target.value);\r\n    }}\r\n    value = {user}>\r\n    {\r\n        allUsers.map((user) => {\r\n            return(\r\n                <option value={user}>{user.name}</option>\r\n            )\r\n        })\r\n    }\r\n    </select>\r\n    <br />\r\n    <button className='btn btn-success'\r\n    onClick={(e) => {\r\n        handleSubmit(e)\r\n    }}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}