{"version":3,"sources":["components/FormControllInput.jsx","components/Map.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormControllInput","label","isError","errorMsg","handleInputChange","TextField","fullWidth","onChange","event","required","error","helperText","MapWithAMarker","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","latitude","longitude","Map","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","Form","useState","open","setOpen","users","setUsers","title","setTitle","body","setBody","titleError","setTitleError","bodyError","setBodyError","selectedUser","setSelectedUser","userError","setUserError","type","message","alert","setAlert","target","value","length","useEffect","getUsers","a","axios","get","res","console","log","status","data","handleSubmit","preventDefault","post","userId","id","withCredentials","Collapse","in","Alert","severity","action","IconButton","color","size","onClick","fontSize","sx","mb","marginLeft","marginTop","textAlign","Typography","variant","gutterBottom","Grid","container","spacing","display","justifyContent","alignItems","border","backgroundColor","padding","noValidate","onSubmit","item","xs","sm","FormControl","to","smooth","offset","Select","MenuItem","map","user","key","name","FormHelperText","Button","marginBottom","parseFloat","address","geo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27393f4c.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\n\nconst FormControllInput = ({label, isError, errorMsg, handleInputChange}) => {\n    return (\n            <TextField\n                fullWidth\n                onChange={(event)=>handleInputChange(event, label)}\n                required\n                label={label}\n                error={isError}\n                helperText={isError ? errorMsg: \"\"}\n            />\n    )\n}\n\nexport default FormControllInput\n","\n\nimport React from 'react'\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n  } from \"react-google-maps\";\n  \n  const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n    <GoogleMap\n      defaultZoom={1}\n      defaultCenter={{ lat:17.426161 , lng:78.412537  }}\n    >\n      <Marker\n        position={{ lat: props.latitude, lng: props.longitude }}\n      />\n    </GoogleMap>\n  ));\n  \n  \n  const Map = ({lat, lng}) => {\n      return (\n          <div>\n              \n              <MapWithAMarker\n              latitude={lat}\n              longitude ={lng}\n            \n    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&v=3.exp&libraries=geometry,drawing,places`}\n    loadingElement={<div style={{ height: `100%` }} />}\n    containerElement={<div style={{ height: `400px` }} />}\n    mapElement={<div style={{ height: `100%` }} />}\n  />\n          </div>\n      )\n  }\n  \n  export default Map\n  ","import React from 'react'\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport FormControllInput from './FormControllInput'\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { Link as Scroll} from 'react-scroll';\nimport Map from './Map';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, FormHelperText, Grid, FormControl, Typography, Alert, Collapse, IconButton } from '@mui/material';\n\nconst Form = () => {\n    \n    const [open, setOpen] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [titleError, setTitleError] = useState({isError: false, errorMsg: \"\"});\n    const [bodyError, setBodyError] = useState({isError: false, errorMsg: \"\"});\n    const [selectedUser, setSelectedUser] = useState(\"select\");\n    const [userError, setUserError] = useState(\"\");\n    const [alert, setAlert] = useState({type: \"success\", message: \"\"});\n    const handleInputChange = (event, type)=>{\n\n        if(type == \"Title\"){\n            setTitle(event.target.value);\n            if(event.target.value.length === 0){\n                setTitleError({isError: true, errorMsg: \"Please enter a value for TITLE\"});\n                return;\n            }\n            setTitleError({isError: false, errorMsg: \"\"});\n            \n        }else if(type == \"Body\"){\n            setBody(event.target.value);\n            if(event.target.value.length === 0){\n                setBodyError({isError: true, errorMsg: \"Please enter a value for BODY\"});\n                return;\n            }\n            setBodyError({isError: false, errorMsg: \"\"});\n        }\n    }\n    useEffect(() => {\n        getUsers();\n    }, [])\n    const getUsers = async ()=>{\n        try {\n            const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n            console.log(res);\n            //Fetching results from the API was successful\n            if(res.status === 200){\n                setUsers(res.data);\n                console.log(\"Users is \", users);\n            }else{\n                //Some error has happened\n                setAlert({type: \"error\", message: \"Couldn't fetch Users!!\"});\n                setOpen(true);\n            \n            }\n           \n\n        } catch (error) {\n            //Something is wrong, so acknowledge\n            setAlert({type: \"error\", message: \"Something went wrong, couldn't fetch the users!!\"});\n            setOpen(true);\n            \n        }\n        \n    }\n    const handleUsersChange = (event)=>{\n        setSelectedUser(event.target.value);\n        if(event.target.value === \"select\"){\n            setUserError(\"Please select the user\");\n            return;\n        }\n        setUserError(\"\");\n        console.log(event.target.value);\n    }\n    const handleSubmit = async (event)=>{\n        event.preventDefault();\n        \n        let post = true;\n        if(title.length == 0){\n            post = false;\n            setTitleError({isError: true, errorMsg: \"Please enter a value for TITLE\"});\n        }else{\n            console.log(\"Title is \" + title);\n            setTitleError({isError: false, errorMsg: \"\"});\n        }\n        if(body.length == 0){\n            post = false;\n            setBodyError({isError: true, errorMsg: \"Please enter a value for BODY\"});\n        }else{\n            console.log(\"Body is \" + body);\n            setBodyError({isError: false, errorMsg: \"\"});\n        }\n        if(selectedUser ===  \"select\"){\n            post = false;\n            setUserError(\"Please select the user\");\n        }else{\n            setUserError(\"\");\n        }\n        //Make a post request only when there are no errors\n        if(post === true){\n            const data = {\n               title, body, userId: selectedUser.id\n            }\n            try {\n                const res = await axios.post('https://jsonplaceholder.typicode.com/posts', data, { withCredentials: true});\n                console.log(res);\n                if(res.status === 200 || res.status === 201){\n                    setAlert({type: \"success\", message: \"Successfully posted the data!!\"});\n                    setOpen(true);\n                }else{\n                    setAlert({type: \"error\", message: \"Something went wrong, couldn't post the data!!\"});\n                    setOpen(true);\n                }\n            } catch (error) {\n                console.log(\"Error\");\n                setAlert({type: \"error\", message: \"SOMETHING went wrong, couldn't post the data!!\"});\n                setOpen(true);\n            }\n        }\n       \n    }\n    return (\n        <div>\n         <Collapse in={open}>\n        <Alert\n            severity={alert.type}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb: 2 }}\n        >\n          {alert.message}\n        </Alert>\n      </Collapse>\n        <div style={{marginLeft: '2%', marginTop: \"3%\"}}>\n           \n            <div style={{textAlign: 'center'}}>\n            <Typography variant=\"h1\" gutterBottom>Sample JSON</Typography>\n            </div>\n              <Grid container spacing={2} display=\"flex\" justifyContent=\"space-evenly\" alignItems=\"center\">\n              \n            <form  style={{border: \"3px solid black\", backgroundColor: \"#B5DEFF\", padding: \"10%\"}} noValidate onSubmit={(event)=>handleSubmit(event)}>\n            {\n                    users.length === 0 ? <Typography variant=\"h4\">No users found</Typography>:\n              <Grid container spacing={2}>\n                \n                    <>\n                    <Grid item xs={12} sm = {4}>\n                    <FormControl fullWidth error={userError.length !== 0}>\n                        <Scroll to=\"gmap\" smooth offset = {2090}>\n                        <Select\n                        fullWidth\n                        value={selectedUser}\n                        color=\"secondary\"\n                        onChange={handleUsersChange}\n                >\n                  \n                             <MenuItem value={\"select\"}>Select User</MenuItem>\n                        {\n                            users.map((user, key)=>{\n                                return <MenuItem key={key} value={user}>{user.name}</MenuItem>\n                            })\n                        }\n                    \n\n  </Select>\n  </Scroll>\n  {\n      userError.length > 0 && <FormHelperText style={{color: \"red\"}}>Please select a user</FormHelperText>\n  }\n  \n  </FormControl>\n  </Grid>\n                    </>\n                \n                <Grid item xs={12} sm ={4}>\n                    <FormControllInput label=\"Title\" isError={titleError.isError} errorMsg={titleError.errorMsg} handleInputChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm ={4}>\n                    <FormControllInput label=\"Body\" isError={bodyError.isError} errorMsg={bodyError.errorMsg} handleInputChange={handleInputChange} />\n                </Grid>\n                \n                <Grid item xs={12} sm ={12}>\n                    <Button variant=\"contained\" type=\"submit\" fullWidth>Submit</Button>\n                    \n                </Grid>\n                \n                </Grid>\n}\n            </form>\n         \n\n            </Grid>\n            <div  id=\"gmap\" style={{marginTop: \"2%\", marginBottom: \"5%\"}}>\n\n          \n            {\n                    selectedUser !== \"select\" \n                    &&\n                    <Map lat={parseFloat(selectedUser.address.geo.lat)} lng={parseFloat(selectedUser.address.geo.lng)} />\n            }\n              </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Form\n","import Form from \"./components/Form\";\nimport Map from \"./components/Map\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Form />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}