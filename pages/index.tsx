import Head from 'next/head'

import { useEffect, useState } from 'react'
import axios from 'axios'

import Map from './Map'
import FormControl from './FormControl'
import Submit from './Submit'

import  Style  from '../styles/Home.module.css'

function Container(props:{
  name :string
}){
  return(
  <>
    <div style={{margin:"10px"}}>{props.name}</div>
  </>)
}

export default function  Home() {
  const [posts, setPosts] = useState([]);
  const fetchData=async ()=>{
    const {data}=await axios.get('https://jsonplaceholder.typicode.com/users')
    setPosts(data)  
  }
  useEffect(() => {
    fetchData()
  }, []);
  
  const [values, setValues] = useState({
    userId : "",
    body:"",
    title:""
  });
  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setValues({ ...values, [event.target.name]: event.target.value });
  };
  const validate = () => {
    const result={
      isValid:false,
      errorMessage:"Plese Select the user"
    }
    if(parseInt(values.userId)>0 && parseInt(values.userId)<=10 ){
      result.isValid=true
    }
    return result;
  }
  const required=()=>{
    const result={
      isValid:false,
      errorMessage:"Filed is required"
    }
    if(values.title.length<1){
      result.isValid=true
    }
    return result;
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={Style.body}>
        <>
        <div className={Style.Title}>The Assingment</div>
        {posts.length>0?(
          <div className={Style.List}>
            {posts.map((post:any)=>{ 
              return <Container  name={post.name} key={post.id}/>
            })}
            
          </div>): (
            <p className="loading">Loading... </p>
         )}
        <form className={Style.COntent}>
          <FormControl lable='User Id' type="number" onChange={onChange} validate={validate}/>
          {posts.length>0?<Map posts={posts} />:null}
          <FormControl lable='Title' type="text" onChange={onChange} validate={required}/>
          <FormControl lable='Body' type="text" onChange={onChange} validate={required}/>
          <Submit data={values} />
        </form>
        
        </>
      </main>
    </>
  )
}
